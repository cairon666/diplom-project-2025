# Конфигурация для внешнего nginx на сервере
# Поместите в /etc/nginx/sites-available/cairon.ru

server {
    listen 80;
    server_name cairon.ru www.cairon.ru;
    
    # Redirect HTTP to HTTPS
    return 301 https://cairon.ru$request_uri;
}

server {
    listen 443 ssl http2;
    server_name cairon.ru www.cairon.ru;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/cairon.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cairon.ru/privkey.pem;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Block bot requests
    location ~* /(admin|wp-admin|wp-login|manage|cgi-bin|webpages|remote) {
        return 403;
    }
    
    # Block malicious files
    location ~* \.(asp|jsp|php)$ {
        return 403;
    }
    
    # API requests - proxy directly to backend container
    location /api/ {
        # Remove /api prefix and proxy to backend
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # All other requests (SPA routes and static files) - proxy to frontend container
    location / {
        # Proxy directly to frontend container (port from docker-compose)
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Don't buffer for SPA
        proxy_buffering off;
    }
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Additional security
    location ~ /\. {
        deny all;
    }
}

# WebSocket connection upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
} 