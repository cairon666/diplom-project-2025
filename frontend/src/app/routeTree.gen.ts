/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PanelRouteRouteImport } from './routes/panel/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PanelIndexRouteImport } from './routes/panel/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as PanelDevicesRouteImport } from './routes/panel/devices'
import { Route as PanelComparativeAnalysisRouteImport } from './routes/panel/comparative-analysis'
import { Route as AuthTelegramConfirmRegisterRouteImport } from './routes/auth/telegram-confirm-register'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthRecoverRouteImport } from './routes/auth/recover'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as PanelSettingsRouteRouteImport } from './routes/panel/settings/route'
import { Route as PanelSettingsIndexRouteImport } from './routes/panel/settings/index'
import { Route as PanelSettingsExternalAppsRouteImport } from './routes/panel/settings/external-apps'

const PanelRouteRoute = PanelRouteRouteImport.update({
  id: '/panel',
  path: '/panel',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PanelIndexRoute = PanelIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PanelRouteRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const PanelDevicesRoute = PanelDevicesRouteImport.update({
  id: '/devices',
  path: '/devices',
  getParentRoute: () => PanelRouteRoute,
} as any)
const PanelComparativeAnalysisRoute =
  PanelComparativeAnalysisRouteImport.update({
    id: '/comparative-analysis',
    path: '/comparative-analysis',
    getParentRoute: () => PanelRouteRoute,
  } as any)
const AuthTelegramConfirmRegisterRoute =
  AuthTelegramConfirmRegisterRouteImport.update({
    id: '/telegram-confirm-register',
    path: '/telegram-confirm-register',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthRecoverRoute = AuthRecoverRouteImport.update({
  id: '/recover',
  path: '/recover',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const PanelSettingsRouteRoute = PanelSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => PanelRouteRoute,
} as any)
const PanelSettingsIndexRoute = PanelSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PanelSettingsRouteRoute,
} as any)
const PanelSettingsExternalAppsRoute =
  PanelSettingsExternalAppsRouteImport.update({
    id: '/external-apps',
    path: '/external-apps',
    getParentRoute: () => PanelSettingsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/panel': typeof PanelRouteRouteWithChildren
  '/panel/settings': typeof PanelSettingsRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/recover': typeof AuthRecoverRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/telegram-confirm-register': typeof AuthTelegramConfirmRegisterRoute
  '/panel/comparative-analysis': typeof PanelComparativeAnalysisRoute
  '/panel/devices': typeof PanelDevicesRoute
  '/auth/': typeof AuthIndexRoute
  '/panel/': typeof PanelIndexRoute
  '/panel/settings/external-apps': typeof PanelSettingsExternalAppsRoute
  '/panel/settings/': typeof PanelSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/recover': typeof AuthRecoverRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/telegram-confirm-register': typeof AuthTelegramConfirmRegisterRoute
  '/panel/comparative-analysis': typeof PanelComparativeAnalysisRoute
  '/panel/devices': typeof PanelDevicesRoute
  '/auth': typeof AuthIndexRoute
  '/panel': typeof PanelIndexRoute
  '/panel/settings/external-apps': typeof PanelSettingsExternalAppsRoute
  '/panel/settings': typeof PanelSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/panel': typeof PanelRouteRouteWithChildren
  '/panel/settings': typeof PanelSettingsRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/recover': typeof AuthRecoverRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/telegram-confirm-register': typeof AuthTelegramConfirmRegisterRoute
  '/panel/comparative-analysis': typeof PanelComparativeAnalysisRoute
  '/panel/devices': typeof PanelDevicesRoute
  '/auth/': typeof AuthIndexRoute
  '/panel/': typeof PanelIndexRoute
  '/panel/settings/external-apps': typeof PanelSettingsExternalAppsRoute
  '/panel/settings/': typeof PanelSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/panel'
    | '/panel/settings'
    | '/auth/login'
    | '/auth/recover'
    | '/auth/register'
    | '/auth/telegram-confirm-register'
    | '/panel/comparative-analysis'
    | '/panel/devices'
    | '/auth/'
    | '/panel/'
    | '/panel/settings/external-apps'
    | '/panel/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/recover'
    | '/auth/register'
    | '/auth/telegram-confirm-register'
    | '/panel/comparative-analysis'
    | '/panel/devices'
    | '/auth'
    | '/panel'
    | '/panel/settings/external-apps'
    | '/panel/settings'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/panel'
    | '/panel/settings'
    | '/auth/login'
    | '/auth/recover'
    | '/auth/register'
    | '/auth/telegram-confirm-register'
    | '/panel/comparative-analysis'
    | '/panel/devices'
    | '/auth/'
    | '/panel/'
    | '/panel/settings/external-apps'
    | '/panel/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  PanelRouteRoute: typeof PanelRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/panel': {
      id: '/panel'
      path: '/panel'
      fullPath: '/panel'
      preLoaderRoute: typeof PanelRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/panel/': {
      id: '/panel/'
      path: '/'
      fullPath: '/panel/'
      preLoaderRoute: typeof PanelIndexRouteImport
      parentRoute: typeof PanelRouteRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/panel/devices': {
      id: '/panel/devices'
      path: '/devices'
      fullPath: '/panel/devices'
      preLoaderRoute: typeof PanelDevicesRouteImport
      parentRoute: typeof PanelRouteRoute
    }
    '/panel/comparative-analysis': {
      id: '/panel/comparative-analysis'
      path: '/comparative-analysis'
      fullPath: '/panel/comparative-analysis'
      preLoaderRoute: typeof PanelComparativeAnalysisRouteImport
      parentRoute: typeof PanelRouteRoute
    }
    '/auth/telegram-confirm-register': {
      id: '/auth/telegram-confirm-register'
      path: '/telegram-confirm-register'
      fullPath: '/auth/telegram-confirm-register'
      preLoaderRoute: typeof AuthTelegramConfirmRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/recover': {
      id: '/auth/recover'
      path: '/recover'
      fullPath: '/auth/recover'
      preLoaderRoute: typeof AuthRecoverRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/panel/settings': {
      id: '/panel/settings'
      path: '/settings'
      fullPath: '/panel/settings'
      preLoaderRoute: typeof PanelSettingsRouteRouteImport
      parentRoute: typeof PanelRouteRoute
    }
    '/panel/settings/': {
      id: '/panel/settings/'
      path: '/'
      fullPath: '/panel/settings/'
      preLoaderRoute: typeof PanelSettingsIndexRouteImport
      parentRoute: typeof PanelSettingsRouteRoute
    }
    '/panel/settings/external-apps': {
      id: '/panel/settings/external-apps'
      path: '/external-apps'
      fullPath: '/panel/settings/external-apps'
      preLoaderRoute: typeof PanelSettingsExternalAppsRouteImport
      parentRoute: typeof PanelSettingsRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRecoverRoute: typeof AuthRecoverRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthTelegramConfirmRegisterRoute: typeof AuthTelegramConfirmRegisterRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRecoverRoute: AuthRecoverRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthTelegramConfirmRegisterRoute: AuthTelegramConfirmRegisterRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface PanelSettingsRouteRouteChildren {
  PanelSettingsExternalAppsRoute: typeof PanelSettingsExternalAppsRoute
  PanelSettingsIndexRoute: typeof PanelSettingsIndexRoute
}

const PanelSettingsRouteRouteChildren: PanelSettingsRouteRouteChildren = {
  PanelSettingsExternalAppsRoute: PanelSettingsExternalAppsRoute,
  PanelSettingsIndexRoute: PanelSettingsIndexRoute,
}

const PanelSettingsRouteRouteWithChildren =
  PanelSettingsRouteRoute._addFileChildren(PanelSettingsRouteRouteChildren)

interface PanelRouteRouteChildren {
  PanelSettingsRouteRoute: typeof PanelSettingsRouteRouteWithChildren
  PanelComparativeAnalysisRoute: typeof PanelComparativeAnalysisRoute
  PanelDevicesRoute: typeof PanelDevicesRoute
  PanelIndexRoute: typeof PanelIndexRoute
}

const PanelRouteRouteChildren: PanelRouteRouteChildren = {
  PanelSettingsRouteRoute: PanelSettingsRouteRouteWithChildren,
  PanelComparativeAnalysisRoute: PanelComparativeAnalysisRoute,
  PanelDevicesRoute: PanelDevicesRoute,
  PanelIndexRoute: PanelIndexRoute,
}

const PanelRouteRouteWithChildren = PanelRouteRoute._addFileChildren(
  PanelRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  PanelRouteRoute: PanelRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
